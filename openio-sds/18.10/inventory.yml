---
all:
  hosts:
    node1:
      ansible_host: ID
  vars:
    ansible_user: root
    ansible_connection: docker

  children:
    openio:
      children:
        fronts: {}
        backs: {}

      vars:
        # namespace: OPENIO
        namespace_storage_policy: SINGLE

        # bind 127.0.0.1 by default
        openio_bind_address: "127.0.0.1"
        # Remove zookeeper url
        openio_namespace_zookeeper_url: ""
        # Reduce service policy for a standalone node
        openio_namespace_service_update_policy:
          - name: meta2
            policy: KEEP
            replicas: 1
            distance: 1
          - name: rdir
            policy: KEEP
            replicas: 1
            distance: 1
        openio_rdir_serviceid: 1
        openio_manage_os_requirement: false
        openio_account_redis_standalone: "127.0.0.1:6011"


        ########
        # Special needs
        # ---- Low memory nodes (ARM, docker, ...)
        openio_account_workers: 1
        openio_oioswift_workers: 1
        openio_event_agent_workers: 1
        openio_zookeeper_parallel_gc_threads: 1
        openio_zookeeper_memory: "256M"
        openio_minimal_score_for_volume_admin_bootstrap: 5
        openio_minimal_score_for_directory_bootstrap: 5
        # ---- End Low memory nodes

        # Reduce directory size
        namespace_meta1_digits: 0

        openio_oioswift_filter_swift3:
          use: "egg:swift3#swift3"
          force_swift_request_proxy_log: true
          s3_acl: true
          check_bucket_owner: true
          location: "us-east-1"
          # always set same value
          max_bucket_listing: 1000
          max_multi_delete_objects: 1000
          bucket_db_enabled: true
          bucket_db_host: "127.0.0.1:6011"


    # what is not used for storage
    fronts:
      hosts: {}

    # what is used for storage
    backs:
      hosts:
        node1: {}

    conscience:
      hosts:
        node1: {}

    namespace:
      children:
        openio: {}

    oioproxy:
      children:
        openio: {}

    conscience-agent:
      children:
        backs: {}

    oio-blob-indexer:
      children:
        backs: {}

    meta:
      children:
        meta0: {}
        meta1: {}
        meta2: {}

    meta0:
      hosts:
        node1: {}

    meta1:
      hosts:
        node1: {}

    meta2:
      hosts:
        node1: {}

    zookeeper: {}

    redis:
      hosts:
        node1: {}

    oioswift:
      children:
        backs: {}

    ecd: {}

    oio-event-agent:
      children:
        backs: {}

    account:
      children:
        backs: {}

    rawx:
      children:
        backs: {}
...
